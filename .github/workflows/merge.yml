name: deploy-production
on:
  push:
    branches: [ "main" ]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4

      # Node.js setup and build
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'
      - run: npm ci
      - run: npm run build
      - run: npm test

      # Setup Google Cloud SDK and authenticate
      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v1

      - name: Authenticate with Google Cloud
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SA_KEY }}

      # Create repository if it doesn't exist
      - name: Create Artifact Registry Repository
        run: |
          gcloud artifacts repositories create mail-sender \
            --repository-format=docker \
            --location=us-east1 || echo "Repository exists"

      # Grant permissions to repository
      - name: Set repository permissions
        run: |
          SERVICE_ACCOUNT=$(echo ${{ secrets.GCP_SA_KEY }} | jq -r '.client_email')
          gcloud artifacts repositories add-iam-policy-binding mail-sender \
            --location=us-east1 \
            --member="serviceAccount:$SERVICE_ACCOUNT" \
            --role="roles/artifactregistry.writer" || echo "Permissions already set"

      # Direct Docker login
      - name: Docker Login
        run: |
          gcloud auth print-access-token | docker login -u oauth2accesstoken --password-stdin https://us-east1-docker.pkg.dev

      # Build, tag and push with native Docker commands
      - name: Build and Push Docker Image
        run: |
          # Build the image
          docker build -t ${{ secrets.GCP_REPOSITORY }}/${{ secrets.SERVICE_NAME }}:${{ github.sha }} .
          
          # Push the image
          docker push ${{ secrets.GCP_REPOSITORY }}/${{ secrets.SERVICE_NAME }}:${{ github.sha }}

      # Deploy to Cloud Run
      - name: Deploy to Cloud Run
        id: deploy
        uses: google-github-actions/deploy-cloudrun@v1
        with:
          service: ${{ secrets.SERVICE_NAME }}
          region: us-east1
          image: ${{ secrets.GCP_REPOSITORY }}/${{ secrets.SERVICE_NAME }}:${{ github.sha }}

      # Output the deployed URL
      - name: Show deployed URL
        run: echo "Deployed to ${{ steps.deploy.outputs.url }}"